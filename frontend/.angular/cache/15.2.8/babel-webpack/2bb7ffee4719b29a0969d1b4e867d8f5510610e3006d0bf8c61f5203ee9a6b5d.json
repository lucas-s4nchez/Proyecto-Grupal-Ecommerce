{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8000/';\n    this.user = JSON.parse(localStorage.getItem('user')) || null;\n    this.isAuthenticated = localStorage.getItem('token') ? true : false;\n    this.isAdmin = this.user?.is_staff ? this.user.is_staff : false;\n  }\n  startLogin(email, password) {\n    return this.http.post(this.url + 'api/v1/auth/login', {\n      username: email,\n      password: password\n    });\n  }\n  startRegister(email, name, last_name, password) {\n    return this.http.post(this.url + 'api/v1/auth/register', {\n      email: email,\n      name: name,\n      last_name: last_name,\n      password: password\n    });\n  }\n  startLogout(token) {\n    return this.http.post(this.url + 'api/v1/auth/logout', {\n      token: token\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAMtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALxB,QAAG,GAAW,wBAAwB;IACtC,SAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC,IAAI,IAAI;IACxD,oBAAe,GAAGD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK;IAC9D,YAAO,GAAG,IAAI,CAACC,IAAI,EAAEC,QAAQ,GAAG,IAAI,CAACD,IAAI,CAACC,QAAQ,GAAG,KAAK;EAEnB;EAEvCC,UAAU,CAACC,KAAa,EAAEC,QAAgB;IACxC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,mBAAmB,EAAE;MACpDC,QAAQ,EAAEJ,KAAK;MACfC,QAAQ,EAAEA;KACX,CAAC;EACJ;EACAI,aAAa,CACXL,KAAa,EACbM,IAAY,EACZC,SAAiB,EACjBN,QAAgB;IAEhB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,sBAAsB,EAAE;MACvDH,KAAK,EAAEA,KAAK;MACZM,IAAI,EAAEA,IAAI;MACVC,SAAS,EAAEA,SAAS;MACpBN,QAAQ,EAAEA;KACX,CAAC;EACJ;EACAO,WAAW,CAACC,KAAa;IACvB,OAAO,IAAI,CAACjB,IAAI,CAACU,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,oBAAoB,EAAE;MACrDM,KAAK,EAAEA;KACR,CAAC;EACJ;;AA/BWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["AuthService","constructor","http","JSON","parse","localStorage","getItem","user","is_staff","startLogin","email","password","post","url","username","startRegister","name","last_name","startLogout","token","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ferna\\OneDrive\\Escritorio\\develop\\Proyecto-Grupal-Ecommerce\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  url: String = 'http://localhost:8000/';\r\n  user = JSON.parse(localStorage.getItem('user')!) || null;\r\n  isAuthenticated = localStorage.getItem('token') ? true : false;\r\n  isAdmin = this.user?.is_staff ? this.user.is_staff : false;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  startLogin(email: string, password: string): Observable<any> {\r\n    return this.http.post(this.url + 'api/v1/auth/login', {\r\n      username: email,\r\n      password: password,\r\n    });\r\n  }\r\n  startRegister(\r\n    email: string,\r\n    name: string,\r\n    last_name: string,\r\n    password: string\r\n  ): Observable<any> {\r\n    return this.http.post(this.url + 'api/v1/auth/register', {\r\n      email: email,\r\n      name: name,\r\n      last_name: last_name,\r\n      password: password,\r\n    });\r\n  }\r\n  startLogout(token: string): Observable<any> {\r\n    return this.http.post(this.url + 'api/v1/auth/logout', {\r\n      token: token,\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}