{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport class IsAdminGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  redirect(isAdmin) {\n    if (!isAdmin) {\n      this.router.navigate(['/']);\n    }\n  }\n  canActivate(route, state) {\n    const isAdmin = this.authService.isAdmin;\n    this.redirect(isAdmin);\n    return isAdmin;\n  }\n}\nIsAdminGuard.ɵfac = function IsAdminGuard_Factory(t) {\n  return new (t || IsAdminGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n};\nIsAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IsAdminGuard,\n  factory: IsAdminGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAcA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,WAAM,GAAND,MAAM;IAAkB,gBAAW,GAAXC,WAAW;EAAgB;EAEvEC,QAAQ,CAACC,OAAgB;IACvB,IAAI,CAACA,OAAO,EAAE;MACZ,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;EAE/B;EACAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,MAAMJ,OAAO,GAAG,IAAI,CAACF,WAAW,CAACE,OAAO;IACxC,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC;IACtB,OAAOA,OAAO;EAChB;;AAnBWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFX;AAAM","names":["IsAdminGuard","constructor","router","authService","redirect","isAdmin","navigate","canActivate","route","state","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ferna\\OneDrive\\Escritorio\\develop\\Proyecto-Grupal-Ecommerce\\frontend\\src\\app\\guards\\is-admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IsAdminGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  redirect(isAdmin: boolean) {\r\n    if (!isAdmin) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    const isAdmin = this.authService.isAdmin;\r\n    this.redirect(isAdmin);\r\n    return isAdmin;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}