{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:5000/';\n  }\n  getProducts() {\n    return this.http.get(this.url + 'products').pipe(map(response => response.map(product => {\n      if (product.discount) {\n        product.discountedPrice = product.price - product.price * product.discount / 100;\n      }\n      return product;\n    })));\n  }\n  getProductById(id) {\n    return this.http.get(this.url + 'products/' + id).pipe(map(product => {\n      if (product.discount) {\n        product.discountedPrice = product.price - product.price * product.discount / 100;\n      }\n      return product;\n    }));\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,QAAG,GAAW,wBAAwB;EACC;EAEvCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,GAAG,GAAG,UAAU,CAAC,CAACC,IAAI,CACzDP,GAAG,CAAEQ,QAAQ,IACXA,QAAQ,CAACR,GAAG,CAAES,OAAO,IAAI;MACvB,IAAIA,OAAO,CAACC,QAAQ,EAAE;QACpBD,OAAO,CAACE,eAAe,GACrBF,OAAO,CAACG,KAAK,GAAIH,OAAO,CAACG,KAAK,GAAGH,OAAO,CAACC,QAAQ,GAAI,GAAG;;MAE5D,OAAOD,OAAO;IAChB,CAAC,CAAC,CACH,CACF;EACH;EAEAI,cAAc,CAACC,EAAU;IACvB,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,GAAG,GAAG,WAAW,GAAGQ,EAAE,CAAC,CAACP,IAAI,CAC7DP,GAAG,CAAES,OAAO,IAAI;MACd,IAAIA,OAAO,CAACC,QAAQ,EAAE;QACpBD,OAAO,CAACE,eAAe,GACrBF,OAAO,CAACG,KAAK,GAAIH,OAAO,CAACG,KAAK,GAAGH,OAAO,CAACC,QAAQ,GAAI,GAAG;;MAE5D,OAAOD,OAAO;IAChB,CAAC,CAAC,CACH;EACH;;AA5BWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAc,SAAfd,eAAe;EAAAe,YAFd;AAAM","names":["map","ProductsService","constructor","http","getProducts","get","url","pipe","response","product","discount","discountedPrice","price","getProductById","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ferna\\OneDrive\\Escritorio\\develop\\Proyecto-Grupal-Ecommerce\\frontend\\src\\app\\services\\products.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../interfaces/Products';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductsService {\r\n  url: String = 'http://localhost:5000/';\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.url + 'products').pipe(\r\n      map((response) =>\r\n        response.map((product) => {\r\n          if (product.discount) {\r\n            product.discountedPrice =\r\n              product.price - (product.price * product.discount) / 100;\r\n          }\r\n          return product;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getProductById(id: number): Observable<Product> {\r\n    return this.http.get<Product>(this.url + 'products/' + id).pipe(\r\n      map((product) => {\r\n        if (product.discount) {\r\n          product.discountedPrice =\r\n            product.price - (product.price * product.discount) / 100;\r\n        }\r\n        return product;\r\n      })\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}