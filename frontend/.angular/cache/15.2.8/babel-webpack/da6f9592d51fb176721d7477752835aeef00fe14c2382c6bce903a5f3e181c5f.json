{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport class IsAuthenticatedGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  redirect(isAuthenticated) {\n    if (isAuthenticated) {\n      this.router.navigate(['/']);\n    }\n  }\n  canActivate(route, state) {\n    const isAuthenticated = this.authService.isAuthenticated;\n    this.redirect(isAuthenticated);\n    if (isAuthenticated) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nIsAuthenticatedGuard.ɵfac = function IsAuthenticatedGuard_Factory(t) {\n  return new (t || IsAuthenticatedGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n};\nIsAuthenticatedGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IsAuthenticatedGuard,\n  factory: IsAuthenticatedGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAcA,OAAM,MAAOA,oBAAoB;EAC/BC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,WAAM,GAAND,MAAM;IAAkB,gBAAW,GAAXC,WAAW;EAAgB;EAEvEC,QAAQ,CAACC,eAAwB;IAC/B,IAAIA,eAAe,EAAE;MACnB,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;EAE/B;EACAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,MAAMJ,eAAe,GAAG,IAAI,CAACF,WAAW,CAACE,eAAe;IACxD,IAAI,CAACD,QAAQ,CAACC,eAAe,CAAC;IAC9B,IAAIA,eAAe,EAAE;MACnB,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;;AAvBWL,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAU,SAApBV,oBAAoB;EAAAW,YAFnB;AAAM","names":["IsAuthenticatedGuard","constructor","router","authService","redirect","isAuthenticated","navigate","canActivate","route","state","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ferna\\OneDrive\\Escritorio\\develop\\Proyecto-Grupal-Ecommerce\\frontend\\src\\app\\guards\\is-authenticated.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IsAuthenticatedGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  redirect(isAuthenticated: boolean) {\r\n    if (isAuthenticated) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    const isAuthenticated = this.authService.isAuthenticated;\r\n    this.redirect(isAuthenticated);\r\n    if (isAuthenticated) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}